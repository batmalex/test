import pymongo
from pymongo import MongoClient
import datetime
import os


os.environ['NUMBER_OF_ITERATION'] = '50000'
os.environ['DATABASE_PATH'] = 'mongodb://mongodb-service/'
os.environ['DATABASE_PORT'] = '27017'
os.environ['TEST_DATABASE_NAME'] = 'test_database'
os.environ['TEST_COLLECTION_NAME'] = 'test_collection'
os.environ['MONGO_REPLICA_SET_NAME'] = 'MainRepSet'
os.environ['TIME_LIMITS_FOR_CHECK'] = '120'


number_of_iteration = int(os.environ['NUMBER_OF_ITERATION'])
database_path = os.environ['DATABASE_PATH']
database_port = int(os.environ['DATABASE_PORT'])
database_name = os.environ['TEST_DATABASE_NAME']
collection_name = os.environ['TEST_COLLECTION_NAME']
replicaset_name = os.environ['MONGO_REPLICA_SET_NAME']
time_limits = os.environ['TIME_LIMITS_FOR_CHECK']

active = True
connect_iteration = 0
read_all_docs = False
time_elapsed = False
persistent_iteration_count = 0
cnt_old = cnt = 0
start_time = iter_time = datetime.datetime.utcnow()


while active:
    try:
        iter_time = datetime.datetime.utcnow().isoformat()
        connect_iteration += 1
        conn = MongoClient(host=database_path, replicaset=replicaset_name, port=database_port, readPreference='secondaryPreferred')
        print('{0} {1:<8} Connecting to slave...'.format(iter_time, 'INFO'))

        db = conn[database_name]
        collection = db[collection_name]

        last_iter_time = start_time
        # c = conn.list_database_names()

        while not read_all_docs or not time_elapsed:
            iter_time = datetime.datetime.utcnow()
            cnt = collection.find().count()

            if cnt != cnt_old:
                cnt_old = cnt
                last_iter_time = iter_time
            else:
                delta = (iter_time - last_iter_time).microseconds / 1000000
                if delta >= 2 + persistent_iteration_count * 2:
                    print('{0} {1:<8} At least {2:<10} seconds the number of documents in database is persistent. '
                          'Total documents in db: {3}'.format(iter_time, 'WARNING', round(delta, 2), cnt))
                    persistent_iteration_count += 1

            if cnt >= number_of_iteration:
                read_all_docs = True
                print('{0} {1:<8} All checks completed successfully. The number of inserted docs equals to the number '
                      'of total docs in db.  Total documents in db: {2}'.format(iter_time, 'INFO', cnt))

            elif (iter_time - start_time).seconds >= time_limits:
                time_elapsed = True
                print('{0} {1:<8} Test checks failed. The number of inserted docs not equals to the number of total '
                      'docs in db.  Total documents in db: {2}. '
                      'Total inserted documents: {3}'.format(iter_time, 'INFO', cnt, number_of_iteration ))

    except pymongo.errors.AutoReconnect:
        print('{0} {1:<8} exception: auto-reconnect error. Interrupted while reading {2} documents. '
              'Total connection attempts: {3}'.format(iter_time, 'ERROR', cnt, connect_iteration))
